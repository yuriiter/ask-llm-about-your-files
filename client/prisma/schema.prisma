// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.1.x", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(uuid()) @db.Char(57)
  email String @unique
  files File[]
  chats Chat[]
}

model File {
  id             String   @id @default(uuid()) @db.Char(57)
  external_db_id String   @unique @db.Char(57)
  data_uploaded  DateTime @default(now())
  name           String   @db.Char(100)
  User           User     @relation(fields: [userId], references: [id])
  userId         String   @db.Char(57)
}

model Chat {
  id           String    @id @default(uuid()) @db.Char(57)
  data_created DateTime  @default(now())
  name         String    @db.Char(100)
  messages     Message[]
  User         User      @relation(fields: [userId], references: [id])
  userId       String    @db.Char(57)
  fileIds String[]
}

model Message {
  id           String      @id @default(uuid()) @db.Char(57)
  data_created DateTime    @default(now())
  content      String      @db.LongText
  role         MessageRole
  Chat         Chat       @relation(fields: [chatId], references: [id])
  chatId       String     @db.Char(57)
}

enum MessageRole {
  USER
  ASSISTANT
}
